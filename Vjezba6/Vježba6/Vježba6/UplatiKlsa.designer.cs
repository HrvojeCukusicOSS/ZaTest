#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Vježba6
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Uplatnice")]
	public partial class UplatiKlsaDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertIzvor(Izvor instance);
    partial void UpdateIzvor(Izvor instance);
    partial void DeleteIzvor(Izvor instance);
    partial void InsertKorisnik(Korisnik instance);
    partial void UpdateKorisnik(Korisnik instance);
    partial void DeleteKorisnik(Korisnik instance);
    partial void InsertUplata(Uplata instance);
    partial void UpdateUplata(Uplata instance);
    partial void DeleteUplata(Uplata instance);
    #endregion
		
		public UplatiKlsaDataContext() : 
				base(global::Vježba6.Properties.Settings.Default.UplatniceConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public UplatiKlsaDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public UplatiKlsaDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public UplatiKlsaDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public UplatiKlsaDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Izvor> Izvors
		{
			get
			{
				return this.GetTable<Izvor>();
			}
		}
		
		public System.Data.Linq.Table<Korisnik> Korisniks
		{
			get
			{
				return this.GetTable<Korisnik>();
			}
		}
		
		public System.Data.Linq.Table<Uplata> Uplatas
		{
			get
			{
				return this.GetTable<Uplata>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Izvor")]
	public partial class Izvor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdIzvor;
		
		private string _IBAN;
		
		private string _Model;
		
		private string _PozivniBroj;
		
		private EntitySet<Uplata> _Uplatas;
		
		private EntitySet<Uplata> _Uplatas1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdIzvorChanging(int value);
    partial void OnIdIzvorChanged();
    partial void OnIBANChanging(string value);
    partial void OnIBANChanged();
    partial void OnModelChanging(string value);
    partial void OnModelChanged();
    partial void OnPozivniBrojChanging(string value);
    partial void OnPozivniBrojChanged();
    #endregion
		
		public Izvor()
		{
			this._Uplatas = new EntitySet<Uplata>(new Action<Uplata>(this.attach_Uplatas), new Action<Uplata>(this.detach_Uplatas));
			this._Uplatas1 = new EntitySet<Uplata>(new Action<Uplata>(this.attach_Uplatas1), new Action<Uplata>(this.detach_Uplatas1));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdIzvor", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdIzvor
		{
			get
			{
				return this._IdIzvor;
			}
			set
			{
				if ((this._IdIzvor != value))
				{
					this.OnIdIzvorChanging(value);
					this.SendPropertyChanging();
					this._IdIzvor = value;
					this.SendPropertyChanged("IdIzvor");
					this.OnIdIzvorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IBAN", DbType="NVarChar(21) NOT NULL", CanBeNull=false)]
		public string IBAN
		{
			get
			{
				return this._IBAN;
			}
			set
			{
				if ((this._IBAN != value))
				{
					this.OnIBANChanging(value);
					this.SendPropertyChanging();
					this._IBAN = value;
					this.SendPropertyChanged("IBAN");
					this.OnIBANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model", DbType="NVarChar(3) NOT NULL", CanBeNull=false)]
		public string Model
		{
			get
			{
				return this._Model;
			}
			set
			{
				if ((this._Model != value))
				{
					this.OnModelChanging(value);
					this.SendPropertyChanging();
					this._Model = value;
					this.SendPropertyChanged("Model");
					this.OnModelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PozivniBroj", DbType="NVarChar(22) NOT NULL", CanBeNull=false)]
		public string PozivniBroj
		{
			get
			{
				return this._PozivniBroj;
			}
			set
			{
				if ((this._PozivniBroj != value))
				{
					this.OnPozivniBrojChanging(value);
					this.SendPropertyChanging();
					this._PozivniBroj = value;
					this.SendPropertyChanged("PozivniBroj");
					this.OnPozivniBrojChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Izvor_Uplata", Storage="_Uplatas", ThisKey="IdIzvor", OtherKey="PlatiIzvorID")]
		public EntitySet<Uplata> Uplatas
		{
			get
			{
				return this._Uplatas;
			}
			set
			{
				this._Uplatas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Izvor_Uplata1", Storage="_Uplatas1", ThisKey="IdIzvor", OtherKey="PrimiIzvorID")]
		public EntitySet<Uplata> Uplatas1
		{
			get
			{
				return this._Uplatas1;
			}
			set
			{
				this._Uplatas1.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Uplatas(Uplata entity)
		{
			this.SendPropertyChanging();
			entity.Izvor = this;
		}
		
		private void detach_Uplatas(Uplata entity)
		{
			this.SendPropertyChanging();
			entity.Izvor = null;
		}
		
		private void attach_Uplatas1(Uplata entity)
		{
			this.SendPropertyChanging();
			entity.Izvor1 = this;
		}
		
		private void detach_Uplatas1(Uplata entity)
		{
			this.SendPropertyChanging();
			entity.Izvor1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Korisnik")]
	public partial class Korisnik : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdKorisnik;
		
		private string _Ime;
		
		private string _Adresa;
		
		private EntitySet<Uplata> _Uplatas;
		
		private EntitySet<Uplata> _Uplatas1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdKorisnikChanging(int value);
    partial void OnIdKorisnikChanged();
    partial void OnImeChanging(string value);
    partial void OnImeChanged();
    partial void OnAdresaChanging(string value);
    partial void OnAdresaChanged();
    #endregion
		
		public Korisnik()
		{
			this._Uplatas = new EntitySet<Uplata>(new Action<Uplata>(this.attach_Uplatas), new Action<Uplata>(this.detach_Uplatas));
			this._Uplatas1 = new EntitySet<Uplata>(new Action<Uplata>(this.attach_Uplatas1), new Action<Uplata>(this.detach_Uplatas1));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdKorisnik", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdKorisnik
		{
			get
			{
				return this._IdKorisnik;
			}
			set
			{
				if ((this._IdKorisnik != value))
				{
					this.OnIdKorisnikChanging(value);
					this.SendPropertyChanging();
					this._IdKorisnik = value;
					this.SendPropertyChanged("IdKorisnik");
					this.OnIdKorisnikChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ime", DbType="NChar(35) NOT NULL", CanBeNull=false)]
		public string Ime
		{
			get
			{
				return this._Ime;
			}
			set
			{
				if ((this._Ime != value))
				{
					this.OnImeChanging(value);
					this.SendPropertyChanging();
					this._Ime = value;
					this.SendPropertyChanged("Ime");
					this.OnImeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Adresa", DbType="NChar(65) NOT NULL", CanBeNull=false)]
		public string Adresa
		{
			get
			{
				return this._Adresa;
			}
			set
			{
				if ((this._Adresa != value))
				{
					this.OnAdresaChanging(value);
					this.SendPropertyChanging();
					this._Adresa = value;
					this.SendPropertyChanged("Adresa");
					this.OnAdresaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Korisnik_Uplata", Storage="_Uplatas", ThisKey="IdKorisnik", OtherKey="PlatiID")]
		public EntitySet<Uplata> Uplatas
		{
			get
			{
				return this._Uplatas;
			}
			set
			{
				this._Uplatas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Korisnik_Uplata1", Storage="_Uplatas1", ThisKey="IdKorisnik", OtherKey="PrimiID")]
		public EntitySet<Uplata> Uplatas1
		{
			get
			{
				return this._Uplatas1;
			}
			set
			{
				this._Uplatas1.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Uplatas(Uplata entity)
		{
			this.SendPropertyChanging();
			entity.Korisnik = this;
		}
		
		private void detach_Uplatas(Uplata entity)
		{
			this.SendPropertyChanging();
			entity.Korisnik = null;
		}
		
		private void attach_Uplatas1(Uplata entity)
		{
			this.SendPropertyChanging();
			entity.Korisnik1 = this;
		}
		
		private void detach_Uplatas1(Uplata entity)
		{
			this.SendPropertyChanging();
			entity.Korisnik1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Uplata")]
	public partial class Uplata : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdUplata;
		
		private int _PlatiID;
		
		private int _PrimiID;
		
		private int _PlatiIzvorID;
		
		private int _PrimiIzvorID;
		
		private string _SifraNamjene;
		
		private string _Opis;
		
		private System.DateTime _DatumIzvrsenja;
		
		private double _Iznos;
		
		private string _Valuta;
		
		private EntityRef<Korisnik> _Korisnik;
		
		private EntityRef<Izvor> _Izvor;
		
		private EntityRef<Korisnik> _Korisnik1;
		
		private EntityRef<Izvor> _Izvor1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdUplataChanging(int value);
    partial void OnIdUplataChanged();
    partial void OnPlatiIDChanging(int value);
    partial void OnPlatiIDChanged();
    partial void OnPrimiIDChanging(int value);
    partial void OnPrimiIDChanged();
    partial void OnPlatiIzvorIDChanging(int value);
    partial void OnPlatiIzvorIDChanged();
    partial void OnPrimiIzvorIDChanging(int value);
    partial void OnPrimiIzvorIDChanged();
    partial void OnSifraNamjeneChanging(string value);
    partial void OnSifraNamjeneChanged();
    partial void OnOpisChanging(string value);
    partial void OnOpisChanged();
    partial void OnDatumIzvrsenjaChanging(System.DateTime value);
    partial void OnDatumIzvrsenjaChanged();
    partial void OnIznosChanging(double value);
    partial void OnIznosChanged();
    partial void OnValutaChanging(string value);
    partial void OnValutaChanged();
    #endregion
		
		public Uplata()
		{
			this._Korisnik = default(EntityRef<Korisnik>);
			this._Izvor = default(EntityRef<Izvor>);
			this._Korisnik1 = default(EntityRef<Korisnik>);
			this._Izvor1 = default(EntityRef<Izvor>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUplata", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdUplata
		{
			get
			{
				return this._IdUplata;
			}
			set
			{
				if ((this._IdUplata != value))
				{
					this.OnIdUplataChanging(value);
					this.SendPropertyChanging();
					this._IdUplata = value;
					this.SendPropertyChanged("IdUplata");
					this.OnIdUplataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlatiID", DbType="Int NOT NULL")]
		public int PlatiID
		{
			get
			{
				return this._PlatiID;
			}
			set
			{
				if ((this._PlatiID != value))
				{
					if (this._Korisnik.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPlatiIDChanging(value);
					this.SendPropertyChanging();
					this._PlatiID = value;
					this.SendPropertyChanged("PlatiID");
					this.OnPlatiIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrimiID", DbType="Int NOT NULL")]
		public int PrimiID
		{
			get
			{
				return this._PrimiID;
			}
			set
			{
				if ((this._PrimiID != value))
				{
					if (this._Korisnik1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPrimiIDChanging(value);
					this.SendPropertyChanging();
					this._PrimiID = value;
					this.SendPropertyChanged("PrimiID");
					this.OnPrimiIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlatiIzvorID", DbType="Int NOT NULL")]
		public int PlatiIzvorID
		{
			get
			{
				return this._PlatiIzvorID;
			}
			set
			{
				if ((this._PlatiIzvorID != value))
				{
					if (this._Izvor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPlatiIzvorIDChanging(value);
					this.SendPropertyChanging();
					this._PlatiIzvorID = value;
					this.SendPropertyChanged("PlatiIzvorID");
					this.OnPlatiIzvorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrimiIzvorID", DbType="Int NOT NULL")]
		public int PrimiIzvorID
		{
			get
			{
				return this._PrimiIzvorID;
			}
			set
			{
				if ((this._PrimiIzvorID != value))
				{
					if (this._Izvor1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPrimiIzvorIDChanging(value);
					this.SendPropertyChanging();
					this._PrimiIzvorID = value;
					this.SendPropertyChanged("PrimiIzvorID");
					this.OnPrimiIzvorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SifraNamjene", DbType="NVarChar(3)")]
		public string SifraNamjene
		{
			get
			{
				return this._SifraNamjene;
			}
			set
			{
				if ((this._SifraNamjene != value))
				{
					this.OnSifraNamjeneChanging(value);
					this.SendPropertyChanging();
					this._SifraNamjene = value;
					this.SendPropertyChanged("SifraNamjene");
					this.OnSifraNamjeneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Opis", DbType="NChar(80) NOT NULL", CanBeNull=false)]
		public string Opis
		{
			get
			{
				return this._Opis;
			}
			set
			{
				if ((this._Opis != value))
				{
					this.OnOpisChanging(value);
					this.SendPropertyChanging();
					this._Opis = value;
					this.SendPropertyChanged("Opis");
					this.OnOpisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DatumIzvrsenja", DbType="Date NOT NULL")]
		public System.DateTime DatumIzvrsenja
		{
			get
			{
				return this._DatumIzvrsenja;
			}
			set
			{
				if ((this._DatumIzvrsenja != value))
				{
					this.OnDatumIzvrsenjaChanging(value);
					this.SendPropertyChanging();
					this._DatumIzvrsenja = value;
					this.SendPropertyChanged("DatumIzvrsenja");
					this.OnDatumIzvrsenjaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Iznos", DbType="Float NOT NULL")]
		public double Iznos
		{
			get
			{
				return this._Iznos;
			}
			set
			{
				if ((this._Iznos != value))
				{
					this.OnIznosChanging(value);
					this.SendPropertyChanging();
					this._Iznos = value;
					this.SendPropertyChanged("Iznos");
					this.OnIznosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Valuta", DbType="NChar(3) NOT NULL", CanBeNull=false)]
		public string Valuta
		{
			get
			{
				return this._Valuta;
			}
			set
			{
				if ((this._Valuta != value))
				{
					this.OnValutaChanging(value);
					this.SendPropertyChanging();
					this._Valuta = value;
					this.SendPropertyChanged("Valuta");
					this.OnValutaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Korisnik_Uplata", Storage="_Korisnik", ThisKey="PlatiID", OtherKey="IdKorisnik", IsForeignKey=true)]
		public Korisnik Korisnik
		{
			get
			{
				return this._Korisnik.Entity;
			}
			set
			{
				Korisnik previousValue = this._Korisnik.Entity;
				if (((previousValue != value) 
							|| (this._Korisnik.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Korisnik.Entity = null;
						previousValue.Uplatas.Remove(this);
					}
					this._Korisnik.Entity = value;
					if ((value != null))
					{
						value.Uplatas.Add(this);
						this._PlatiID = value.IdKorisnik;
					}
					else
					{
						this._PlatiID = default(int);
					}
					this.SendPropertyChanged("Korisnik");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Izvor_Uplata", Storage="_Izvor", ThisKey="PlatiIzvorID", OtherKey="IdIzvor", IsForeignKey=true)]
		public Izvor Izvor
		{
			get
			{
				return this._Izvor.Entity;
			}
			set
			{
				Izvor previousValue = this._Izvor.Entity;
				if (((previousValue != value) 
							|| (this._Izvor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Izvor.Entity = null;
						previousValue.Uplatas.Remove(this);
					}
					this._Izvor.Entity = value;
					if ((value != null))
					{
						value.Uplatas.Add(this);
						this._PlatiIzvorID = value.IdIzvor;
					}
					else
					{
						this._PlatiIzvorID = default(int);
					}
					this.SendPropertyChanged("Izvor");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Korisnik_Uplata1", Storage="_Korisnik1", ThisKey="PrimiID", OtherKey="IdKorisnik", IsForeignKey=true)]
		public Korisnik Korisnik1
		{
			get
			{
				return this._Korisnik1.Entity;
			}
			set
			{
				Korisnik previousValue = this._Korisnik1.Entity;
				if (((previousValue != value) 
							|| (this._Korisnik1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Korisnik1.Entity = null;
						previousValue.Uplatas1.Remove(this);
					}
					this._Korisnik1.Entity = value;
					if ((value != null))
					{
						value.Uplatas1.Add(this);
						this._PrimiID = value.IdKorisnik;
					}
					else
					{
						this._PrimiID = default(int);
					}
					this.SendPropertyChanged("Korisnik1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Izvor_Uplata1", Storage="_Izvor1", ThisKey="PrimiIzvorID", OtherKey="IdIzvor", IsForeignKey=true)]
		public Izvor Izvor1
		{
			get
			{
				return this._Izvor1.Entity;
			}
			set
			{
				Izvor previousValue = this._Izvor1.Entity;
				if (((previousValue != value) 
							|| (this._Izvor1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Izvor1.Entity = null;
						previousValue.Uplatas1.Remove(this);
					}
					this._Izvor1.Entity = value;
					if ((value != null))
					{
						value.Uplatas1.Add(this);
						this._PrimiIzvorID = value.IdIzvor;
					}
					else
					{
						this._PrimiIzvorID = default(int);
					}
					this.SendPropertyChanged("Izvor1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
